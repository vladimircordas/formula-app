{"version":3,"sources":["images/safety-car.gif","images/f1-logo.jpeg","images/page-not-found.jpg","history.js","views/Header.js","views/Home.js","components/functions/flags.js","components/drivers/Driver.js","views/Drivers.js","components/teams/Team.js","views/Teams.js","components/races/Race.js","views/Races.js","components/functions/racePosition.js","components/drivers/DriverRaces.js","components/drivers/DriverDetails.js","components/teams/TeamResults.js","components/teams/TeamDetails.js","components/functions/nationToNationality.js","components/races/RaceResults.js","components/races/RaceQualifiers.js","components/races/RaceTabs.js","components/races/RaceDetails.js","views/Footer.js","views/NotFound.js","components/SelectYear.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createBrowserHistory","useStyles","makeStyles","list","width","fullList","TemporaryDrawer","side","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","open","event","type","key","className","onClick","Drawer","onClose","role","onKeyDown","src","Logo","alt","exact","activeClassName","to","Home","console","log","this","props","year","style","backgroundColor","color","padding","url","playing","youtube","playerVars","showinfo","loop","Component","flags","nation","Driver","getDriverDetails","e","linkTo","postData","driverId","history","push","currentYear","national","nationality","Fragment","position","data-itemid","code","givenName","familyName","Constructors","name","points","Drivers","drivers","loading","search","getDrivers","bind","$","data","target","value","substr","filteredResults","MRData","StandingsTable","StandingsLists","DriverStandings","filter","driver","toLowerCase","indexOf","id","onChange","updateSearch","htmlFor","map","i","Team","getTeamDetails","teamData","Constructor","constructorId","href","rel","Teams","teams","getTeams","undefined","season","colSpan","ConstructorStandings","team","Race","getRaceDetails","dataset","itemid","currentRace","raceData","driverName","Results","Circuit","Location","country","drivernational","round","circuitId","raceName","circuitName","date","height","Races","getRaces","races","RaceTable","race","racePosition","DriverRaces","getResults","driverid","results","result","textTransform","resultData","grid","DriverDetails","match","params","driverImagesFunction","imagesJson","driverImages","imagesString","JSON","stringify","parse","length","image","ErrorImage","process","dateOfBirth","TeamResults","teamid","driver1","driver2","status","points1","points2","pointsTotal","parseInt","TeamDetails","teamImagesFunction","constructorid","teamImages","teamId","replace","nationToNationality","RaceResults","raceid","Time","time","RaceQualifiers","QualifyingResults","qualiTime","Q3","Q2","Q1","TabContainer","Typography","component","children","ScrollableTabsButtonAuto","handleChange","root","AppBar","Tabs","scrollButtons","variant","Tab","label","withStyles","theme","flexGrow","palette","background","paper","RaceDetails","raceId","circuitImagesFunction","images","circuitImages","img","trackId","CircuitTable","Circuits","circuitYear","locality","Footer","NotFound","margin","display","SelectYear","yearSelected","handleChangeYear","getYear","thisYear","Date","getFullYear","allYears","x","yearList","onSubmit","handleSubmit","App","getSelectedYear","selectedYear","basename","path","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a9f1e0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/safety-car.c1ca08b7.gif\";","module.exports = __webpack_public_path__ + \"static/media/f1-logo.a4c37522.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/page-not-found.13c108f4.jpg\";","import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nimport Logo from '../images/f1-logo.jpeg';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 300,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n\r\n    const toggleDrawer = (side, open) => event => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [side]: open });\r\n    };\r\n\r\n    const sideList = side => (\r\n\r\n        <div\r\n            className={classes.list}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(side, false)}\r\n            onKeyDown={toggleDrawer(side, false)}\r\n        >\r\n            <ul>\r\n                <li className='relative'><img src={Logo} alt='f1 logo' className='asideLogo' /><div className='logoOverlay'>FORMULA 1<br />STATS</div></li>\r\n                <li className='relative'><NavLink exact={true} className='waves-effect waves-light btn white' activeClassName='is-active' to='/formula-app/home'><span className='decorativeFont'>Q</span>Home</NavLink></li>\r\n                <li className='relative'><NavLink exact={true} className='waves-effect waves-light btn white' activeClassName='is-active' to='/formula-app/drivers'><span className='decorativeFont'>T</span>Drivers</NavLink></li>\r\n                <li className='relative'><NavLink exact={true} className='waves-effect waves-light btn white' activeClassName='is-active' to='/formula-app/teams'><span className='decorativeFont'>'</span>Teams</NavLink></li>\r\n                <li className='relative'><NavLink exact={true} className='waves-effect waves-light btn white' activeClassName='is-active' to='/formula-app/races'><span className='decorativeFont'>!</span>Races</NavLink></li>\r\n            </ul >\r\n        </div >\r\n    );\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"side-menu-button-wrapper\">\r\n            <button className=\"hamburger hamburger--arrowalt-r\" type=\"button\" onClick={toggleDrawer('left', true)}>\r\n                <span className=\"hamburger-box\">\r\n                    <span className=\"hamburger-inner\"></span>\r\n                </span>\r\n            </button>\r\n            <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n                {sideList('left')}\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport ReactPlayer from 'react-player';\r\n\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    render() {\r\n        console.log('home ' + this.props.year);\r\n\r\n        return (\r\n\r\n            <div className=\"wrapper\">\r\n                <h1 className=\"white-text text-darken-2 center-align\">Welcome to Formula 1 Stats!</h1>\r\n                <h4 className=\"white-text text-darken-2 center-align\">Current year is set to <span style={{backgroundColor: \"rgba(0,0,0,0.5)\", color: \"#d50000\", padding: \"0 5px\"}}>{this.props.year}</span></h4>\r\n                <h4 className=\"white-text text-darken-2 center-align\">You can change it in the menu above!</h4>\r\n                <div className=\"video-background\">\r\n                    <div className=\"video-overlay\"></div>\r\n                    <div className=\"video-foreground\">\r\n                        <ReactPlayer\r\n                            url='https://www.youtube.com/watch?v=u1pPJj803Hk'\r\n                            playing\r\n                            youtube={{ playerVars: { showinfo: 1 } }}\r\n                            loop={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","export function flags(nation) {\r\n  switch (nation) {\r\n    case 'German':\r\n    case 'Germany':\r\n      return 'DEU';\r\n\r\n    case 'Austrian':\r\n    case 'Austria':\r\n      return 'AUT';\r\n\r\n    case 'Spanish':\r\n    case 'Spain':\r\n      return 'ESP';\r\n\r\n    case 'Australian':\r\n    case 'Australia':\r\n      return 'AUS';\r\n\r\n    case 'Italian':\r\n    case 'Italy':\r\n      return 'ITA';\r\n\r\n    case 'British':\r\n    case 'UK':\r\n      return 'GBR';\r\n\r\n    case 'Finnish':\r\n    case 'Finland':\r\n      return 'FIN';\r\n\r\n    case 'French':\r\n    case 'France':\r\n      return 'FRA';\r\n\r\n    case 'Brazilian':\r\n    case 'Brazil':\r\n      return 'BRA';\r\n\r\n    case 'Swiss':\r\n    case 'Switzerland':\r\n      return 'CHE';\r\n\r\n    case 'Mexican':\r\n    case 'Mexico':\r\n      return 'MEX';\r\n\r\n    case 'Dutch':\r\n    case 'Netherlands':\r\n      return 'NLD';\r\n\r\n    case 'Denmark':\r\n      return 'DNK';\r\n\r\n    case 'Venezuelan':\r\n      return 'VEN';\r\n\r\n    case 'Indian':\r\n    case 'India':\r\n      return 'IND';\r\n\r\n    case 'Russian':\r\n    case 'Russia':\r\n      return 'RUS';\r\n\r\n    case 'Malaysian':\r\n    case 'Malaysia':\r\n      return 'MYS';\r\n\r\n    case 'Chinese':\r\n    case 'China':\r\n      return 'CHN';\r\n\r\n    case 'Hungarian':\r\n    case 'Hungary':\r\n      return 'HUN';\r\n\r\n    case 'Belgian':\r\n    case 'Belgium':\r\n      return 'BEL';\r\n\r\n    case 'United':\r\n    case 'USA':\r\n      return 'USA';\r\n\r\n    case 'Canadian':\r\n    case 'Canada':\r\n      return 'CAN';\r\n\r\n    case 'Japanase':\r\n    case 'Japan':\r\n      return 'JPN';\r\n\r\n    case 'Singapore':\r\n      return 'SGP';\r\n\r\n    case 'Monaco':\r\n      return 'MCO';\r\n\r\n    case 'Korean':\r\n    case 'Korea':\r\n      return 'KOR';\r\n\r\n    case 'Bahrain':\r\n      return 'BHR';\r\n\r\n    case 'UAE':\r\n      return 'ARE'\r\n\r\n    case 'American':\r\n      return 'USA'\r\n\r\n    case 'Argentinian':\r\n    case 'Argentine':\r\n    case 'Argentina':\r\n      return 'ARG'\r\n\r\n    case 'Thai':\r\n      return 'TH'\r\n\r\n    case 'Monegasque':\r\n      return 'MC'\r\n\r\n    case 'Swedish':\r\n    case 'Sweden':\r\n      return 'SE'\r\n\r\n    case 'New Zealander':\r\n      return 'NZ'\r\n\r\n    case 'South African':\r\n    case 'Rhodesian':\r\n    case 'South Africa':\r\n      return 'ZA'\r\n\r\n    case 'Danish':\r\n      return 'DK'\r\n\r\n    case 'Liechtensteiner':\r\n      return 'LI'\r\n\r\n    case 'Japanese':\r\n      return 'JPN'\r\n\r\n    case 'Irish':\r\n      return 'IE'\r\n\r\n    case 'Chilean':\r\n      return 'CL'\r\n\r\n    case 'Colombian':\r\n      return 'CO'\r\n\r\n    case 'Portuguese':\r\n      return 'PT'\r\n\r\n    case 'Czech':\r\n      return 'CZ'\r\n\r\n    case 'Polish':\r\n      return 'PL'\r\n\r\n    case 'Indonesian':\r\n      return 'ID'\r\n\r\n    case 'Azerbaijan':\r\n      return 'AZ'\r\n\r\n    case 'Turkey':\r\n      return 'TR'\r\n\r\n    case 'Portugal':\r\n      return 'PT'\r\n\r\n    case 'Morocco':\r\n      return 'MAR'\r\n\r\n    case 'Hong Kong':\r\n      return 'HK'\r\n\r\n    case 'New Zealand':\r\n      return 'NZ'\r\n\r\n    default:\r\n      return 'SRB';\r\n  }\r\n}","import React from 'react';\r\nimport history from '../../history';\r\n\r\nimport Flag from 'react-world-flags'\r\nimport { flags } from '../functions/flags';\r\n\r\nclass Driver extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            currentYear: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            currentYear: this.props.year\r\n        })\r\n    }\r\n\r\n    getDriverDetails = (e) => {\r\n        let linkTo = '/formula-app/drivers/' + this.props.postData.Driver.driverId;\r\n        history.push(linkTo);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const national = this.props.postData.Driver.nationality\r\n        return (\r\n            <React.Fragment>\r\n                <tr>\r\n                    <td>{this.props.postData.position}</td>\r\n                    <td>\r\n                        <button\r\n                            onClick={this.getDriverDetails}\r\n                            data-itemid={this.props.postData.Driver.driverId}\r\n                            className=\"waves-effect waves-light btn grey darken-4 pr-50 hover-info\">\r\n                            <div className=\"flagHolder\">\r\n                                <Flag code={`${flags(national)}`} />\r\n                            </div>\r\n                            {this.props.postData.Driver.givenName} {this.props.postData.Driver.familyName}\r\n                        </button>\r\n                    </td>\r\n                    <td>{this.props.postData.Constructors[0].name}</td>\r\n                    <td>{this.props.postData.points}</td>\r\n                </tr>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Driver;","import React from 'react';\r\nimport * as $ from 'jquery';\r\nimport { Link } from 'react-router-dom';\r\nimport Driver from '../components/drivers/Driver';\r\n\r\n\r\n\r\nclass Drivers extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            drivers: [],\r\n            loading: true,\r\n            search: \"\",\r\n            year: \"\"\r\n        }\r\n        this.getDrivers = this.getDrivers.bind(this);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.year !== state.year) {\r\n            return { year: props.year };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDrivers();\r\n    }\r\n\r\n    getDrivers() {\r\n        var year = this.state.year;\r\n        //console.log(year);\r\n        var url = `https://ergast.com/api/f1/${year}/driverStandings.json`;\r\n        $.get(url, (data) => {\r\n            //console.log(data);\r\n            this.setState({\r\n                drivers: data,\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    updateSearch(event) {\r\n        this.setState({ search: event.target.value.substr(0, 20) });\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.state.drivers);\r\n        //console.log(this.props.year);\r\n        console.log('drivers ' + this.state.year);\r\n        if (this.state.loading === true) {\r\n            return (\r\n                <div className=\"wrapper\">\r\n                    <div className=\"loading\"></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        var drivers = this.state.drivers.MRData.StandingsTable.StandingsLists[0].DriverStandings;\r\n        var filteredResults = drivers.filter(\r\n            (driver) => {\r\n                return driver.Driver.givenName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 ||\r\n                    driver.Driver.familyName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 ||\r\n                    driver.Constructors[0].name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n            }\r\n        );\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <Link className=\"breadcrumb\" to=\"/\">Home</Link>\r\n                        <span className=\"breadcrumb\">Drivers - {this.props.year}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"table-name-and-search\">\r\n                            <div>Drivers Championship Standings - {this.props.year}</div>\r\n                            <div>\r\n                                <div className=\"input-field\">\r\n                                    <input type=\"text\"\r\n                                        id=\"search_bar\"\r\n                                        value={this.state.search}\r\n                                        onChange={this.updateSearch.bind(this)}\r\n                                    />\r\n                                    <label htmlFor=\"search_bar\"><i className=\"material-icons\">search</i></label >\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <table className=\"responsive-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Position</th>\r\n                                    <th>Name</th>\r\n                                    <th>Constructor</th>\r\n                                    <th>Points</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {filteredResults.map((driver, i) => <Driver postData={driver} key={i} year={this.state.year} />)}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Drivers;","import React from 'react';\r\n\r\nimport history from '../../history';\r\n\r\nimport Flag from 'react-world-flags';\r\nimport { flags } from '../functions/flags'\r\n\r\nclass Team extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            currentYear: \"\"\r\n        }\r\n        console.log(\"team \" + this.state.currentYear)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            currentYear: this.props.year\r\n        })\r\n    }\r\n\r\n    getTeamDetails = (e) => {\r\n        let linkTo = '/formula-app/teams/' + this.props.teamData.Constructor.constructorId;\r\n        history.push(linkTo);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { teamData } = this.props;\r\n        const national = teamData.Constructor.nationality;\r\n        //console.log(teamData);\r\n        return (\r\n            <tr>\r\n                <td> {teamData.position} </td>\r\n                <td>\r\n                    <button\r\n                        className=\"waves-effect waves-light btn grey darken-4 pr-50 hover-info\"\r\n                        onClick={this.getTeamDetails}\r\n                        data-itemid={teamData.Constructor.constructorId}><div className=\"flagHolder\">\r\n                            <Flag code={`${flags(national)}`} />\r\n                        </div>{teamData.Constructor.name}\r\n\r\n                    </button>\r\n                </td>\r\n                <td><a href={teamData.Constructor.url} target=\"_blank\" rel=\"noopener noreferrer\">DETAILS  <i className=\"material-icons\">open_in_new</i></a></td>\r\n                <td>{teamData.points}</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Team;","import React from 'react';\r\nimport * as $ from 'jquery';\r\nimport { Link } from 'react-router-dom';\r\nimport Team from '../components/teams/Team';\r\n\r\n\r\n\r\nclass Teams extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            teams: [],\r\n            loading: true,\r\n            search: \"\",\r\n            year: 2013\r\n        }\r\n        this.getTeams = this.getTeams.bind(this);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.year !== state.year) {\r\n            return { year: props.year };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTeams();\r\n    }\r\n\r\n    getTeams() {\r\n        const year = this.state.year;\r\n        var url = `https://ergast.com/api/f1/${year}/constructorStandings.json`;\r\n        $.get(url, (data) => {\r\n            //    console.log(data);\r\n            this.setState({\r\n                teams: data,\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    updateSearch(event) {\r\n        this.setState({ search: event.target.value.substr(0, 20) });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading === true) {\r\n            return (\r\n                <div>\r\n                    <div className=\"loading\"></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.state.teams.MRData.StandingsTable.StandingsLists[0] === undefined) {\r\n            return (\r\n                <div className=\"wrapper\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12\">\r\n                            <div className='breadCrumbsHolder'>\r\n                                <Link className=\"breadcrumb\" to=\"/\">Home</Link>\r\n                                <span className=\"breadcrumb\">Teams - {this.props.year}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12\">\r\n                            <div className=\"table-name-and-search\">\r\n                                <div>Constructor Championship Standings - {this.state.teams.MRData.StandingsTable.season}</div>\r\n                                <div>\r\n                                    <div className=\"input-field\">\r\n                                        <input type=\"text\"\r\n                                            id=\"search_bar\"\r\n                                            value={this.state.search}\r\n                                            onChange={this.updateSearch.bind(this)}\r\n                                        />\r\n                                        <label htmlFor=\"search_bar\"><i className=\"material-icons\">search</i></label >\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <table className=\"responsive-table\">\r\n                                <thead>\r\n\r\n                                    <tr>\r\n                                        <th>Position</th>\r\n                                        <th>Team</th>\r\n                                        <th>Details</th>\r\n                                        <th>Points</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td colSpan=\"4\">There is no data for the selected year...</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        var teams = this.state.teams.MRData.StandingsTable.StandingsLists[0].ConstructorStandings;\r\n        var filteredResults = teams.filter(\r\n\r\n            (team) => {\r\n                return team.Constructor.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n            }\r\n        );\r\n\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <div className='breadCrumbsHolder'>\r\n                            <Link className=\"breadcrumb\" to=\"/\">Home</Link>\r\n                            <span className=\"breadcrumb\">Teams - {this.props.year}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"table-name-and-search\">\r\n                            <div>Constructor Championship Standings - {this.state.teams.MRData.StandingsTable.season}</div>\r\n                            <div>\r\n                                <div className=\"input-field\">\r\n                                    <input type=\"text\"\r\n                                        id=\"search_bar\"\r\n                                        value={this.state.search}\r\n                                        onChange={this.updateSearch.bind(this)}\r\n                                    />\r\n                                    <label htmlFor=\"search_bar\"><i className=\"material-icons\">search</i></label >\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <table className=\"responsive-table\">\r\n                            <thead>\r\n\r\n                                <tr>\r\n                                    <th>Position</th>\r\n                                    <th>Team</th>\r\n                                    <th>Details</th>\r\n                                    <th>Points</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {filteredResults.map((team, i) => <Team teamData={team} key={i} />)}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Teams;","import React from 'react';\r\nimport history from '../../history';\r\n\r\nimport Flag from 'react-world-flags'\r\nimport { flags } from '../functions/flags';\r\n\r\nclass Race extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            currentYear: \"\",\r\n            currentRace: \"\"\r\n        }\r\n        console.log(\"race \" + this.state.currentYear)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            currentYear: this.props.year\r\n        })\r\n    }\r\n\r\n    getRaceDetails = (e) => {\r\n        let linkTo = '/formula-app/races/' + e.target.dataset.itemid;\r\n        history.push(linkTo);\r\n    }\r\n\r\n    render() {\r\n        const { raceData } = this.props;\r\n        const driverName =\r\n            raceData.Results[0].Driver.givenName +\r\n            ' ' +\r\n            raceData.Results[0].Driver.familyName;\r\n        const national = raceData.Circuit.Location.country;\r\n        const drivernational = raceData.Results[0].Driver.nationality\r\n        return (\r\n            <tr>\r\n                <td>{raceData.round}</td>\r\n                <td>\r\n                    <button\r\n                        className=\"waves-effect waves-light btn grey darken-4 pr-50 hover-info\"\r\n                        onClick={this.getRaceDetails}\r\n                        data-itemid={raceData.Circuit.circuitId}\r\n                    >\r\n                        <div className=\"flagHolder\">\r\n                            <Flag code={`${flags(national)}`} />\r\n                        </div>\r\n                        {raceData.raceName}\r\n                    </button>\r\n                </td>\r\n                <td>{raceData.Circuit.circuitName}</td>\r\n                <td>{raceData.date}</td>\r\n                <td>\r\n                    <div className=\"waves-effect waves-light btn-flat no-coursor flagLeft\">\r\n                        <div className=\"flagHolder\">\r\n                            <Flag code={`${flags(drivernational)}`} height='20' width='50' />\r\n                        </div>\r\n                        {driverName}\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Race;\r\n","import React from 'react';\r\nimport * as $ from 'jquery';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Race from '../components/races/Race';\r\n\r\nclass Races extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            races: [],\r\n            loading: true,\r\n            search: \"\",\r\n            year: \"\"\r\n        }\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.year !== state.year) {\r\n            return { year: props.year };\r\n        }\r\n        return null;\r\n    }\r\n    componentDidMount() {\r\n        this.getRaces();\r\n    }\r\n\r\n\r\n    getRaces = () => {\r\n        var year = this.state.year;\r\n        var url = `https://ergast.com/api/f1/${year}/results/1.json`;\r\n        $.get(url, (data) => {\r\n            this.setState({\r\n                races: data,\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    updateSearch(event) {\r\n        this.setState({ search: event.target.value.substr(0, 20) });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading === true) {\r\n            return (\r\n                <div className=\"wrapper\">\r\n                    <div className=\"loading\"></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        var races = this.state.races.MRData.RaceTable.Races;\r\n        var filteredResults = races.filter(\r\n            (race) => {\r\n                return race.raceName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 ||\r\n                    race.Circuit.circuitName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 ||\r\n                    race.Results[0].Driver.givenName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 ||\r\n                    race.Results[0].Driver.familyName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n            }\r\n        );\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <Link className=\"breadcrumb\" to=\"/\">Home</Link>\r\n                        <span className=\"breadcrumb\" to=\"/\">Races - {this.props.year}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <div className=\"table-name-and-search\">\r\n                            <div>Tracks calendar - {this.state.races.MRData.RaceTable.Races[0].season}</div>\r\n                            <div>\r\n                                <div className=\"input-field\">\r\n                                    <input type=\"text\"\r\n                                        id=\"search_bar\"\r\n                                        value={this.state.search}\r\n                                        onChange={this.updateSearch.bind(this)}\r\n                                    />\r\n                                    <label htmlFor=\"search_bar\"><i className=\"material-icons\">search</i></label >\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <table className=\"responsive-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Race order</th>\r\n                                    <th>Location</th>\r\n                                    <th>Track name</th>\r\n                                    <th>Date</th>\r\n                                    <th>Winner</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {filteredResults.map((race, i) => <Race raceData={race} key={i} />)}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Races;","export function racePosition(position) {\r\n  switch (position) {\r\n    case '1':\r\n      return 'yellow darken-1';\r\n\r\n    case '2':\r\n      return 'grey lighten-1';\r\n\r\n    case '3':\r\n      return 'deep-orange accent-2';\r\n\r\n    case '4':\r\n      return 'light-green';\r\n\r\n    case '5':\r\n      return 'light-blue lighten-1';\r\n\r\n    case '6':\r\n      return 'purple lighten-3';\r\n\r\n    case '7':\r\n      return 'purple lighten-2';\r\n\r\n    case '8':\r\n      return 'purple lighten-1';\r\n\r\n    case '9':\r\n      return 'purple';\r\n\r\n    case '10':\r\n      return 'purple darken-1';\r\n    case 'no-data':\r\n      return 'black white-text'\r\n\r\n    default:\r\n      return 'blue';\r\n  }\r\n}","import React from 'react';\r\nimport * as $ from 'jquery';\r\nimport { racePosition } from '../functions/racePosition';\r\n\r\n\r\nexport class DriverRaces extends React.Component {\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.year !== state.year) {\r\n            return { year: props.year };\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            results: [],\r\n            loading: true,\r\n            search: \"\",\r\n            year: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getResults();\r\n        //    console.log(this.state.year);\r\n    }\r\n\r\n    updateSearch(event) {\r\n        this.setState({ search: event.target.value.substr(0, 20) });\r\n    }\r\n\r\n    getResults = () => {\r\n        var year = this.state.year;\r\n        console.log(year);\r\n        const id = this.props.driverid;\r\n        var url = `https://ergast.com/api/f1/${year}/drivers/${id}/results.json`;\r\n        $.get(url, (data) => {\r\n            this.setState({\r\n                results: data,\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n    render() {\r\n\r\n\r\n        if (this.state.loading === true) {\r\n            return (\r\n                <div className=\"wrapper\">\r\n                </div>\r\n            )\r\n        }\r\n        var results = this.state.results.MRData.RaceTable.Races;\r\n        var filteredResults = results.filter(\r\n            (result) => {\r\n                return result.raceName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n            }\r\n        );\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <div className=\"table-name-and-search\">\r\n                    <div><span style={{ textTransform: 'capitalize' }}>{this.state.driver}</span> season {this.props.year} results</div>\r\n                    <div>\r\n                        <div className=\"input-field\">\r\n                            <input type=\"text\"\r\n                                id=\"search_bar\"\r\n                                value={this.state.search}\r\n                                onChange={this.updateSearch.bind(this)}\r\n                            />\r\n                            <label htmlFor=\"search_bar\"><i className=\"material-icons\">search</i></label >\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <table className=\"responsive-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Position</th>\r\n                            <th>Name</th>\r\n                            <th>Team</th>\r\n                            <th>Grid</th>\r\n                            <th>Place</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {filteredResults.map((result, i) => <Results resultData={result} key={i} />)}\r\n                    </tbody>\r\n                </table>\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nclass Results extends React.Component {\r\n    render() {\r\n\r\n        const driver = this.props.resultData.Results[0].position;\r\n        return (\r\n            <React.Fragment>\r\n                <tr>\r\n                    <td>{this.props.resultData.round}</td>\r\n                    <td>{this.props.resultData.raceName}</td>\r\n                    <td>{this.props.resultData.Results[0].Constructor.name}</td>\r\n                    <td>{this.props.resultData.Results[0].grid}</td>\r\n                    <td className={`${racePosition(driver)}`}>{this.props.resultData.Results[0].position}</td>\r\n                </tr>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DriverRaces;","import React, { Component } from 'react';\r\nimport * as $ from 'jquery';\r\nimport { Link } from 'react-router-dom';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nimport DriverRaces from './DriverRaces';\r\n\r\n\r\nimport ErrorImage from '../../images/safety-car.gif';\r\n\r\nimport driverImages from '../functions/driverImages';\r\n\r\nexport class DriverDetails extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            driver: [],\r\n            loading: true,\r\n            year: \"\"\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.getDrivers();\r\n    }\r\n\r\n    getDrivers = () => {\r\n        var year = this.props.year;\r\n        const id = this.props.match.params.driver\r\n        var url = `https://ergast.com/api/f1/${year}/drivers/${id}/driverStandings.json`;\r\n        $.get(url, (data) => {\r\n\r\n            // console.log(data.MRData.StandingsTable.StandingsLists[0].DriverStandings[0].Driver)\r\n            this.setState({\r\n                driver: data,\r\n                loading: false\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n\r\n    driverImagesFunction = (driverid) => {\r\n        var imagesJson = driverImages;\r\n        var imagesString = JSON.stringify(imagesJson);\r\n        var result = JSON.parse(imagesString);\r\n        for (var i = 0; i < result.length - 1; i++) {\r\n            if (result[i].id === driverid) {\r\n                return result[i].image;\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n\r\n        if (this.state.loading === true) {\r\n            return (\r\n                <div className=\"wrapper\">\r\n                    <div className=\"loading\"></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        if (this.state.driver.MRData.StandingsTable.StandingsLists[0] === undefined) {\r\n            return (\r\n                <div className=\"wrapper error\">\r\n                    <img className=\"error-image\" src={ErrorImage} alt=\"error error error\" />\r\n                    <h2 className=\"error-message\">Oooops... <span style={{ textTransform: \"capitalize\" }}>{this.state.driver.MRData.StandingsTable.driverId}</span> doesn't exist in the chosen year...</h2>\r\n                    <h2 className=\"error-message\">Pick another year to proceed!</h2>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n\r\n        var driver = this.state.driver.MRData.StandingsTable.StandingsLists[0].DriverStandings[0];\r\n        var driverid = driver.Driver.driverId;\r\n    //    var driversYear = '/formula-app/drivers/' + this.state.year;\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <div className='breadCrumbsHolder'>\r\n                            <Link className=\"breadcrumb\" to=\"/formula-app/\">Home</Link>\r\n                            <Link className=\"breadcrumb\" to=\"/formula-app/drivers\">Drivers</Link>\r\n                            <span className=\"breadcrumb\">{driver.Driver.givenName} {driver.Driver.familyName} - {this.props.year}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 l4 margin-bottom\">\r\n                        <div className=\"driverDetails\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-image\">\r\n                                    <LazyLoadImage\r\n                                        alt={driver.Driver.driverId}\r\n                                        src={process.env.PUBLIC_URL + `${this.driverImagesFunction(driverid)}`} // use normal <img> attributes as props \r\n                                    />\r\n                                    <div className=\"card-content\">\r\n                                        <span>Name: <h5>{driver.Driver.givenName} {driver.Driver.familyName}</h5> </span>\r\n                                        <p>Nationality: {driver.Driver.nationality}</p>\r\n                                        <p>Team: {driver.Constructors[0].name}</p>\r\n                                        <p>Birth: {driver.Driver.dateOfBirth}</p>\r\n                                        <p>Points: {driver.points}</p>\r\n                                        <p>Position: {driver.position}</p>\r\n                                        <p><a href={`${driver.Driver.url}`} target=\"_blank\" rel=\"noopener noreferrer\">Biography: <i className=\"material-icons\">open_in_new</i></a></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col s12 l8\">\r\n                        <div className=\"driverRaces\">\r\n                            <DriverRaces driverid={this.props.match.params.driver} year={this.props.year} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DriverDetails;","import React from 'react';\r\nimport * as $ from 'jquery';\r\nimport { racePosition } from '../functions/racePosition';\r\n\r\nimport Flag from 'react-world-flags'\r\nimport { flags } from '../functions/flags';\r\n\r\n\r\nexport class TeamResults extends React.Component {\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.year !== state.year) {\r\n            return { year: props.year };\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            results: [],\r\n            loading: true,\r\n            search: \"\",\r\n            year: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getResults();\r\n    }\r\n\r\n    getResults = () => {\r\n        var year = this.state.year;\r\n        const id = this.props.teamid;\r\n        var url = `https://ergast.com/api/f1/${year}/constructors/${id}/results.json`;\r\n        $.get(url, (data) => {\r\n            this.setState({\r\n                results: data,\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    updateSearch(event) {\r\n        this.setState({ search: event.target.value.substr(0, 20) });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading === true) {\r\n            return <div></div>\r\n        }\r\n        var results = this.state.results.MRData.RaceTable.Races;\r\n        var filteredResults = results.filter(\r\n            (result) => {\r\n                return result.raceName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n            }\r\n        );\r\n        //console.log(results);\r\n\r\n        var driver1 = \"no-data\";\r\n        var driver2 = \"no-data\";\r\n        if (results[0].Results[0] !== undefined) {\r\n            driver1 = results[0].Results[0].Driver.familyName;\r\n        }\r\n\r\n        if (results[0].Results[1] !== undefined ) {\r\n            driver2 = results[0].Results[1].Driver.familyName;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"table-name-and-search\">\r\n                    <div>Constructor Championship Standings - {this.props.year}</div>\r\n                    <div>\r\n                        <div className=\"input-field\">\r\n                            <input type=\"text\"\r\n                                id=\"search_bar\"\r\n                                value={this.state.search}\r\n                                onChange={this.updateSearch.bind(this)}\r\n                            />\r\n                            <label htmlFor=\"search_bar\"><i className=\"material-icons\">search</i></label >\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <table className=\"responsive-table\">\r\n                    <thead>\r\n\r\n                        <tr>\r\n                            <th>Round</th>\r\n                            <th>Grand Prix</th>\r\n                            <th>{driver1}</th>\r\n                            <th>{driver2}</th>\r\n                            <th>Points</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {filteredResults.map((result, i) => <Results resultData={result} key={i} />)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nclass Results extends React.Component {\r\n    render() {\r\n\r\n        const { resultData } = this.props;\r\n        var driver1 = resultData.Results[0].status;\r\n        var driver2 = \"no-data\";\r\n        if (resultData.Results[0] !== undefined) {\r\n            driver1 = resultData.Results[0].position;\r\n        }\r\n        if (resultData.Results[1] !== undefined) {\r\n            driver2 = resultData.Results[1].position;\r\n        }\r\n        var points1 = 0;\r\n        var points2 = 0;\r\n        if(resultData.Results[0] !== undefined){\r\n            points1 = resultData.Results[0].points;\r\n        }\r\n        if(resultData.Results[1] !== undefined){\r\n            points2 = resultData.Results[1].points;\r\n        }\r\n        var pointsTotal = parseInt(points1) + parseInt(points2);\r\n\r\n        const nation = resultData.Circuit.Location.country;\r\n        return (\r\n            <tr>\r\n                <td>{resultData.round}</td>\r\n                <td>\r\n                    <div className=\"waves-effect waves-light btn-flat no-coursor flagLeft\">\r\n                        <div className=\"flagHolder\">\r\n                            <Flag code={`${flags(nation)}`} height='20' width='50' />\r\n                        </div>\r\n                        {resultData.raceName}\r\n                    </div></td>\r\n                <td className={`${racePosition(driver1)}`}>{driver1}</td>\r\n                <td className={`${racePosition(driver2)}`}>{driver2}</td>\r\n                <td>\r\n\r\n\r\n                    {pointsTotal}\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeamResults;","import React from 'react';\r\nimport * as $ from 'jquery';\r\nimport { Link } from 'react-router-dom';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nimport TeamResults from './TeamResults';\r\n\r\nimport { nationToNationality } from '../functions/nationToNationality';\r\nimport { teamImage } from '../functions/teamImage';\r\n// ERROR IMAGE\r\nimport ErrorImage from '../../images/safety-car.gif';\r\n\r\nimport teamImages from '../functions/teamImages';\r\n\r\n\r\nclass TeamDetails extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            team: [],\r\n            loading: true,\r\n            year: \"\"\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getTeams();\r\n    }\r\n\r\n    getTeams() {\r\n        var year = this.props.year;\r\n        const id = this.props.match.params.team\r\n        var url = `https://ergast.com/api/f1/${year}/constructors/${id}/constructorStandings.json`;\r\n        $.get(url, (data) => {\r\n\r\n            this.setState({\r\n                team: data,\r\n                loading: false\r\n            });\r\n        });\r\n\r\n    }\r\n    teamImagesFunction = (constructorid) => {\r\n        var imagesJson = teamImages;\r\n        var imagesString = JSON.stringify(imagesJson);\r\n        var result = JSON.parse(imagesString);\r\n        for (var i = 0; i < result.length - 1; i++) {\r\n            if (result[i].id === constructorid) {\r\n                return result[i].image;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading === true) {\r\n            return (\r\n                <div className=\"wrapper\">\r\n                    <div className=\"loading\"></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        var teamIdFlawed = this.state.team.MRData.StandingsTable.constructorId;\r\n        var teamId = teamIdFlawed.replace(\"_\", \" \");\r\n        if (this.state.team.MRData.StandingsTable.StandingsLists[0] === undefined) {\r\n            return (\r\n                <div className=\"wrapper error\">\r\n                    <img className=\"error-image\" src={ErrorImage} alt=\"error error error\" />\r\n                    <h2 className=\"error-message\">Oooops... <span style={{ textTransform: \"capitalize\" }}>{teamId}</span> doesn't exist in the chosen year...</h2>\r\n                    <h2 className=\"error-message\">Pick another year to proceed!</h2>\r\n                </div>\r\n            )\r\n        }\r\n        var team = this.state.team.MRData.StandingsTable.StandingsLists[0].ConstructorStandings[0];\r\n        var constructorId = team.Constructor.constructorId;\r\n        var nationality = team.Constructor.nationality;\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <div className='breadCrumbsHolder'>\r\n                            <Link className=\"breadcrumb\" to=\"/formula-app//\">Home</Link>\r\n                            <Link className=\"breadcrumb\" to=\"/formula-app/teams\">Teams</Link>\r\n                            <span className=\"breadcrumb\">{team.Constructor.name} - {this.props.year}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 l4 margin-bottom\">\r\n                        <div className=\"driverDetails\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-image\">\r\n                                    <LazyLoadImage\r\n                                        alt={team.Constructor.name}\r\n                                        src={`${this.teamImagesFunction(constructorId)}`} // use normal <img> attributes as props \r\n                                    />\r\n                                </div>\r\n                                <div className=\"card-content\">\r\n                                    <h5>Name: {team.Constructor.name}</h5>\r\n                                    <p>Country: {`${nationToNationality(nationality)}`}</p>\r\n                                    <p>Position: {team.position}</p>\r\n                                    <p>Points: {team.points}</p>\r\n                                    <p><a href={`${team.Constructor.url}`} target=\"_blank\" rel=\"noopener noreferrer\">History: <i className=\"material-icons\">open_in_new</i></a></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col s12 l8\">\r\n                        <div className=\"driverRaces\">\r\n                            <TeamResults teamid={this.props.match.params.team} year={this.props.year} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeamDetails;\r\n","export function nationToNationality(nation) {\r\n  switch (nation) {\r\n    case 'German':\r\n      return 'Germany';\r\n\r\n    case 'Austrian':\r\n      return 'Austria';\r\n\r\n    case 'French':\r\n      return 'France';\r\n\r\n    case 'Italian':\r\n      return 'Italy';\r\n\r\n    case 'British':\r\n      return 'Great Britain';\r\n\r\n    case 'Indian':\r\n      return 'India';\r\n\r\n    case 'Swiss':\r\n      return 'Switzerland';\r\n\r\n    case 'Russian':\r\n      return 'Russia';\r\n\r\n    case 'Malaysian':\r\n      return 'Malaysia';\r\n\r\n    case 'Hong Kong':\r\n      return 'China - Hong Kong';\r\n\r\n    case 'Mexican':\r\n      return 'Mexico';\r\n\r\n    case 'New Zealand':\r\n      return 'New Zealand';\r\n\r\n    default:\r\n      return 'World';\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport * as $ from 'jquery';\r\nimport Flag from 'react-world-flags';\r\nimport { flags } from '../functions/flags';\r\nimport { racePosition } from '../functions/racePosition';\r\n\r\n\r\n\r\n\r\nexport class RaceResults extends Component {\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.year !== state.year) {\r\n            return { year: props.year };\r\n\r\n        }\r\n        return null;\r\n    }\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            results: [],\r\n            loading: true,\r\n            search: \"\",\r\n            year: \"\"\r\n        }\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        /*this.setState({\r\n            race: this.props.raceid\r\n        })*/\r\n        this.getResults();\r\n    }\r\n    getResults = () => {\r\n        const year = this.props.year;\r\n        const id = this.props.raceid;\r\n        //debugger;\r\n        var url = `https://ergast.com/api/f1/${year}/circuits/${id}/results.json`;\r\n        $.get(url, (data) => {\r\n\r\n            this.setState({\r\n                results: data,\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    updateSearch(event) {\r\n        this.setState({ search: event.target.value.substr(0, 20) });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading === true) {\r\n            return (\r\n                <div className=\"wrapper\">\r\n                </div>\r\n            )\r\n        }\r\n        //debugger;\r\n        var results = this.state.results.MRData.RaceTable.Races[0].Results;\r\n        var filteredResults = results.filter(\r\n            (result) => {\r\n                return result.Driver.givenName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 ||\r\n                    result.Driver.familyName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 ||\r\n                    result.Constructor.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n            }\r\n        );\r\n        return (\r\n            <div>\r\n                <div className=\"table-name-and-search\">\r\n                    <div>Race Results:</div>\r\n                    <div>\r\n                        <div className=\"input-field\">\r\n                            <input type=\"text\"\r\n                                id=\"search_bar\"\r\n                                value={this.state.search}\r\n                                onChange={this.updateSearch.bind(this)}\r\n                            />\r\n                            <label htmlFor=\"search_bar\"><i className=\"material-icons\">search</i></label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <table className=\"responsive-table\">\r\n                    <thead><tr>\r\n                        <th>Position</th>\r\n                        <th>Name</th>\r\n                        <th>Time</th>\r\n                        <th>Team</th>\r\n                        <th>Points</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {filteredResults.map((result, i) => <Results resultData={result} key={i} />)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass Results extends Component {\r\n\r\n    render() {\r\n        const { resultData } = this.props;\r\n        const driverName = resultData.Driver.givenName + ' ' + resultData.Driver.familyName;\r\n        const national = resultData.Driver.nationality;\r\n        const position = resultData.position;\r\n\r\n        if (resultData.Time !== undefined) {\r\n            var time = resultData.Time.time;\r\n        } else {\r\n            time = 'no-data'\r\n        }\r\n\r\n        return (\r\n            <tr>\r\n                <td>{resultData.position}</td>\r\n                <td>\r\n                    <div className=\"waves-effect waves-light btn-flat no-coursor flagLeft\">\r\n                        <div className=\"flagHolder\">\r\n                            <Flag code={`${flags(national)}`} height='20' width='50' />\r\n                        </div>\r\n                        {driverName}\r\n                    </div>\r\n                </td>\r\n                <td>{time}</td>\r\n                <td>{resultData.Constructor.name}</td>\r\n                <td className={`${racePosition(position)}`}>{resultData.points}</td>\r\n            </tr>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RaceResults;\r\n","import React, { Component } from 'react';\r\nimport * as $ from 'jquery';\r\nimport Flag from 'react-world-flags';\r\nimport { flags } from '../functions/flags';\r\n\r\n\r\n\r\nexport class RaceQualifiers extends Component {\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.year !== state.year) {\r\n            return { year: props.year };\r\n\r\n        }\r\n        return null;\r\n    }\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            results: [],\r\n            loading: true,\r\n            search: \"\",\r\n            year: \"\",\r\n            race: \"\"\r\n        }\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            race: this.props.raceid\r\n        })\r\n        this.getResults();\r\n    }\r\n    getResults = () => {\r\n        const year = this.state.year;\r\n        const id = this.props.raceid\r\n        var url = `https://ergast.com/api/f1/${year}/circuits/${id}/qualifying.json`;\r\n        $.get(url, (data) => {\r\n            this.setState({\r\n                results: data,\r\n                loading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    updateSearch(event) {\r\n        this.setState({ search: event.target.value.substr(0, 20) });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading === true) {\r\n            return (\r\n                <div className=\"wrapper\">\r\n                </div>\r\n            )\r\n        }\r\n        if (this.state.results.MRData.RaceTable.Races[0] === undefined) {\r\n            return (\r\n                <div>\r\n                    <div className=\"table-name-and-search\">\r\n                        <div>Race Qualification Results:</div>\r\n\r\n                    </div>\r\n                    <table className=\"responsive-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Position</th>\r\n                                <th>Name</th>\r\n                                <th>Team</th>\r\n                                <th>Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td colSpan=\"4\">There is no data to be shwon...</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan=\"4\">Check the results page to see if the results exist!</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n        var results = this.state.results.MRData.RaceTable.Races[0].QualifyingResults;\r\n        var filteredResults = results.filter(\r\n            (result) => {\r\n                return result.Driver.givenName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 ||\r\n                    result.Driver.familyName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 ||\r\n                    result.Constructor.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n            }\r\n        );\r\n        return (\r\n            <div>\r\n                <div className=\"table-name-and-search\">\r\n                    <div>Race Qualification Results:</div>\r\n                    <div>\r\n                        <div className=\"input-field\">\r\n                            <input type=\"text\"\r\n                                id=\"search_bar\"\r\n                                value={this.state.search}\r\n                                onChange={this.updateSearch.bind(this)}\r\n                            />\r\n                            <label htmlFor=\"search_bar\"><i className=\"material-icons\">search</i></label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <table className=\"responsive-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Position</th>\r\n                            <th>Name</th>\r\n                            <th>Team</th>\r\n                            <th>Time</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {filteredResults.map((result, i) => <Results resultData={result} key={i} />)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass Results extends Component {\r\n\r\n    render() {\r\n\r\n        const { resultData } = this.props;\r\n        const driverName = resultData.Driver.givenName + ' ' + resultData.Driver.familyName;\r\n        const national = resultData.Driver.nationality;\r\n        var qualiTime;\r\n        if (resultData.Q3 < resultData.Q2 && resultData.Q3 < resultData.Q1) {\r\n            qualiTime = resultData.Q3;\r\n        } else if (resultData.Q2 < resultData.Q1 && resultData.Q2 < resultData.Q3) {\r\n            qualiTime = resultData.Q2;\r\n        } else {\r\n            qualiTime = resultData.Q1;\r\n        }\r\n\r\n        return (\r\n            <tr>\r\n                <td>{resultData.position}</td>\r\n                <td>\r\n                    <div className=\"waves-effect waves-light btn-flat no-coursor flagLeft\">\r\n                        <div className=\"flagHolder\">\r\n                            <Flag code={`${flags(national)}`} height='20' width='50' />\r\n                        </div>\r\n                        {driverName}\r\n                    </div>\r\n                </td>\r\n                <td>{resultData.Constructor.name}</td>\r\n                <td>{qualiTime}</td>\r\n            </tr>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RaceQualifiers;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nimport RaceResults from './RaceResults';\r\nimport RaceQualifiers from './RaceQualifiers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\nclass ScrollableTabsButtonAuto extends React.Component {\r\n  state = {\r\n    value: 0,\r\n  };\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.raceid)\r\n    console.log(this.props.year)\r\n    const { classes } = this.props;\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            onChange={this.handleChange}\r\n            scrollButtons=\"auto\"\r\n\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab label=\"Qualifications\" />\r\n            <Tab label=\"Race results\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        {value === 0 && <TabContainer>\r\n          <RaceQualifiers year={this.props.year} raceid={this.props.raceid} />\r\n        </TabContainer>}\r\n        {value === 1 && <TabContainer>\r\n          <RaceResults year={this.props.year} raceid={this.props.raceid} />\r\n        </TabContainer>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nScrollableTabsButtonAuto.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ScrollableTabsButtonAuto);\r\n","import React from 'react';\r\nimport * as $ from 'jquery';\r\nimport { Link } from 'react-router-dom';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport ErrorImage from '../../images/safety-car.gif';\r\nimport circuitImages from '../functions/circuitImages';\r\n\r\nimport FullWidthTabs from './RaceTabs';\r\n\r\nclass RaceDetails extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            race: [],\r\n            loading: true,\r\n            raceId: \"\",\r\n            year: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getRaces();\r\n\r\n    }\r\n\r\n    getRaces = () => {\r\n        const year = this.props.year;\r\n        const id = this.props.match.params.race;\r\n        var url = `https://ergast.com/api/f1/${year}/circuits/${id}.json`;\r\n        $.get(url, (data) => {\r\n            this.setState({\r\n                race: data,\r\n                loading: false,\r\n                raceId: id,\r\n                year: year\r\n            });\r\n        });\r\n    }\r\n\r\n    circuitImagesFunction = (circuitId) => {\r\n        var images = circuitImages;\r\n        var img = JSON.stringify(images);\r\n        var result = JSON.parse(img);\r\n        // console.log(result);\r\n        for (var i = 0; i < result.length - 1; i++) {\r\n            // console.log(result[i].id);\r\n            if (result[i].id === circuitId) {\r\n                return result[i].image;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading === true) {\r\n            return (\r\n                <div className=\"wrapper\">\r\n                    <div className=\"loading\"></div>\r\n                </div>\r\n            )\r\n        }\r\n        var trackIdFlawed = this.state.race.MRData.CircuitTable.circuitId;\r\n        var trackId = trackIdFlawed.replace(\"_\", \" \");\r\n\r\n        if (this.state.race.MRData.CircuitTable.Circuits[0] === undefined) {\r\n            return (\r\n                <div className=\"wrapper error\">\r\n                    <img className=\"error-image\" src={ErrorImage} alt=\"error error error\" />\r\n                    <h2 className=\"error-message\">Oooops... <span style={{ textTransform: \"capitalize\" }}>{trackId}</span> doesn't exist in the chosen year...</h2>\r\n                    <h2 className=\"error-message\">Pick another year to proceed!</h2>\r\n                </div>\r\n            )\r\n        }\r\n        var race = this.state.race.MRData.CircuitTable.Circuits[0];\r\n        var circuitId = race.circuitId;\r\n        var circuitYear = this.state.race.MRData.CircuitTable.season;\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12\">\r\n                        <div className='breadCrumbsHolder'>\r\n                            <Link className=\"breadcrumb\" to=\"/formula-app/\">Home</Link>\r\n                            <Link className=\"breadcrumb\" to=\"/formula-app/races\">Races</Link>\r\n                            <span className=\"breadcrumb\">{race.circuitName} - {this.props.year}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 l4 margin-bottom\">\r\n                        <div className=\"driverDetails sticky\">\r\n                            <div className=\"driverDetails\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-image\">\r\n                                        <LazyLoadImage\r\n                                            alt={race.circuitId}\r\n                                            src={`${this.circuitImagesFunction(circuitId)}`} // use normal <img> attributes as props \r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"card-content\">\r\n                                        <h5>Name: {race.circuitName}</h5>\r\n                                        <p>Country: {race.Location.country}</p>\r\n                                        <p>Team: {race.Location.locality}</p>\r\n                                        <p>Year: {circuitYear}</p>\r\n                                        <p><a href={`${race.url}`} target=\"_blank\" rel=\"noopener noreferrer\">Full Report:  <i className=\"material-icons\">open_in_new</i></a></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col s12 l8\">\r\n                        <div className=\"driverRaces raceDetails\">\r\n                            <FullWidthTabs raceid={this.state.raceId} year={this.state.year} />\r\n\r\n                            {/*<input type=\"checkbox\" id=\"mobile-menu-checkbox\" />\r\n                            <div role=\"navigation\" className=\"mobile-menu\">\r\n                                <RaceResults raceid={this.props.match.params.race} year={this.props.year} />\r\n                            </div>\r\n                            <div role=\"navigation\" className=\"mobile-menu2\">\r\n                                <RaceQualifiers raceid={this.props.match.params.race} year={this.props.year} />\r\n                            </div>\r\n\r\n                            <div className=\"tabHeader\">\r\n                                <label htmlFor=\"mobile-menu-checkbox\" id=\"mobile-menu-btn\">\r\n                                    <span className=\"menu-link\"></span>\r\n                                </label>\r\n                             </div>*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RaceDetails;","import React from 'react';\r\n\r\n\r\n\r\nclass Footer extends React.Component {\r\n\r\n    render() {\r\n       return (\r\n\r\n            <div className=\"row footer\">\r\n                <div className=\"col s12\">\r\n                    <p>Designed and Coded by Vladimir Cordas 2019. Based on ERGAST API.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport NotFound from '../images/page-not-found.jpg';\r\n\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n\r\n\r\n        return (\r\n\r\n            <div className=\"wrapper\" style={{backgroundColor: \"#f5f5f5\"}}>\r\n               <img src={NotFound} alt=\"404 not found\" style={{margin: \"100px auto\", display: 'block'}}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\n\r\n\r\nclass SelectYear extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            yearSelected: \"\"\r\n        }\r\n\r\n        this.handleChangeYear = this.handleChangeYear.bind(this);\r\n        // this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChangeYear(e) {\r\n        this.props.getYear(e.target.value)\r\n        console.log(this.props.year);\r\n    }\r\n    // handleSubmit(event){\r\n\r\n    //     event.preventDefault();\r\n    // }\r\n    render() {\r\n        let minOffset = 0, maxOffset = 69;\r\n        let thisYear = (new Date()).getFullYear();\r\n        let allYears = [];\r\n        for (let x = 0; x <= maxOffset; x++) {\r\n            allYears.push(thisYear - x);\r\n        }\r\n\r\n\r\n        const yearList = allYears.map((year, i) => <option key={i} value={year}>{year}</option>);\r\n        return (\r\n\r\n            <form id=\"main-year-select\" onSubmit={this.handleSubmit}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"yearSelect\">Select a year:</label>\r\n                    <select className=\"browser-default\" id=\"yearSelect\" onChange={this.handleChangeYear}>\r\n                        <option value=\"\">{this.props.year}</option>\r\n                        {yearList}\r\n                    </select>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SelectYear;","\nimport React, { Component } from 'react';\nimport { Router, Route, Switch } from \"react-router-dom\";\n// import createBrowserHistory from 'history/createBrowserHistory';  history={createBrowserHistory}\nimport history from './history';\nimport Drawer from './views/Header'\nimport Home from './views/Home';\nimport Drivers from './views/Drivers';\nimport Teams from './views/Teams';\nimport Races from './views/Races';\nimport DriverDetails from './components/drivers/DriverDetails';\nimport TeamDetails from './components/teams/TeamDetails';\nimport RaceDetails from './components/races/RaceDetails';\nimport './App.css';\n\nimport Footer from './views/Footer';\n\nimport NotFound from './views/NotFound';\n\n\nimport SelectYear from './components/SelectYear';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedYear: 2019\n    }\n  }\n\n\n\n  getSelectedYear = (year) => {\n    this.setState({\n      selectedYear: year\n    });\n  }\n\n  render() {\n    var year = this.state.selectedYear;\n    // console.log('app ' + this.state.selectedYear)\n    return (\n      <div>\n        <Router history={history} basename={process.env.PUBLIC_URL}>\n          <SelectYear getYear={this.getSelectedYear} year={year} />\n          <Drawer year={year} />\n          <div className=\"mainBody\">\n            <Switch>\n\n              <Route exact path='/formula-app/' component={() => <Home year={year} />} />\n\n              <Route exact path='/formula-app/drivers' component={() => <Drivers year={year} />} />\n              <Route exact path='/formula-app/drivers/:driver' component={(props) => <DriverDetails {...props} year={year} />} />\n\n              <Route exact path='/formula-app/teams' component={() => <Teams year={year} />} />\n              <Route exact path='/formula-app/teams/:team' component={(props) => <TeamDetails {...props} year={year} />} />\n\n              <Route exact path='/formula-app/races' component={() => <Races year={year} />} />\n              <Route exact path='/formula-app/races/:race' component={(props) => <RaceDetails {...props} year={year} />} />\n\n              <Route component={NotFound} />\n              \n            </Switch>\n          </div>\n        <Footer />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}